use rand::Rng;
use std::cmp::Ordering;
use std::io;


fn main() {
    println!("Guess the Mikey number!!");

    let secret_number = rand::thread_rng().gen_range(1..=100); //learnt that this is basically what generates the random numbers within rust program which is pretty cool


    loop{
        println!("Input your guess");


        let mut guess = String::new();

        io::stdin()
           .read_line(&mut guess)
           .expect("Failed to read line...");


           let guess: u32 = match guess.trim().parse() {
            Ok(num) => num,
            Err(_) => continue,
           }; //In case of an error, learnt that this allows the program to continue by asking the user to continue inputing a digit value. So basically the program won't crash.


           println!("You guessed the number {guess}");


           match guess.cmp(&secret_number) {
            Ordering::Less => println!("Number is smaller yooo..."),
            Ordering::Greater => println!("That's too large my friend..."),
            Ordering::Equal => {
                println!("Bingo! You have aced Mikeys challenge!! Congrats Champ!");

                break;
            }


           }
    

    
       }
}
